<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <!-- useGeneratedKeys、keyProperty用来指定插入数据后的返回该记录的自增id -->
    <insert id="insertUser" parameterType="User">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into ex_user values (#{id}, #{username}, #{nickname}, #{password}, #{plainPassword}, #{avatarUrl}, #{disabled}, #{disabledTime}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertRoleIdAndUserId">
        insert into ex_role_user values (#{userId}, #{roleId})
    </insert>

    <sql id="selectUsers">
        select id, username, nickname, password, plain_password as plainPassword, avatarUrl, disabled, disabledTime, createTime, updateTime from ex_user
    </sql>
    <select id="selectUserByUsername" parameterType="User" resultType="User">
        <include refid="selectUsers"></include>
        <where>
            <if test="username != null">
                username=#{username}
            </if>
        </where>
    </select>

    <select id="selectUserById" parameterType="int" resultType="User">
        <include refid="selectUsers"></include>
        <where>
            <if test="userId != null">
                id=#{userId}
            </if>
        </where>
    </select>

    <select id="selectUsers" resultType="User" parameterType="String">
        <include refid="selectUsers"></include>
        <where>
            <if test="username != null">
                username=#{username}
            </if>
        </where>
    </select>

    <sql id="updateUser">
        update ex_user set username=#{username},password=#{password},plain_password=#{plainPassword},avatarUrl=#{avatarUrl},disabled=#{disabled},disabledTime=#{disabledTime},updateTime=#{updateTime}
    </sql>
    <update id="updateUser" parameterType="User">
        <include refid="updateUser"></include>
        <where>
            <if test="id != 0">
                id=#{id} and
            </if>
            <if test="username != null">
              username=#{username}
            </if>
        </where>
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from ex_user where id=#{userId}
    </delete>

    <delete id="deleteRoleIdByUserId" parameterType="int">
        delete from ex_role_user where userId=#{userId}
    </delete>
</mapper>